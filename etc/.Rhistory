gapply(big5,function(d)d[which.min(d$ratio),])
print(gapply(big5,function(d)d[which.min(d$ratio),]))
gapply
Q
direct.label(p,list(perpendicular.lines),TRUE)
traceback()
direct.label(p,list(perpendicular.lines),TRUE)
c
direct.label(p,list(perpendicular.lines),TRUE)
big5
winners
Q
direct.label(p,list(perpendicular.lines),TRUE)
direct.label(p,list(perpendicular.lines),TRUE)
direct.label(p,list(perpendicular.lines),TRUE)
direct.label(p,list(perpendicular.lines),TRUE)
direct.label(p,list(perpendicular.lines),TRUE)
cm.data
n
n
cm.data
n
old
d
unique(d$groups)
n
n
n
g
group.specific
only.unique.vals
group.dfs[[d]]
group.dfs[[g]]
lapply(group.dfs,only.unique.vals)
n
n
n
n
n
d
n
n
n
n
n
n
d
n
n
n
n
n
d
n
n
n
d
n
n
n
group.specific
to.restore
n
n
n
n
d
to.restore
Q
direct.label(p,list(perpendicular.lines),TRUE)
c
n
n
urows
lapply(urows,names)
intersect
Reduce(lapply(urows,names),intersect)
Reduce(intersect,lapply(urows,names))
lapply(urows,"[[",urownames)
lapply(urows,function(d)d[,urownames])
urows
str(urows
)
names(urows)
"afklj" %in% names(urows)
to.restore
d
c
Q
direct.label(p,list(perpendicular.lines),TRUE)
c
Q
direct.label(p,list(perpendicular.lines),TRUE)
c
Q
direct.label(p,list(perpendicular.lines),TRUE)
direct.label(p,list(perpendicular.grid),TRUE)
direct.label(p,list(perpendicular.grid))
direct.label(p)
p
direct.label(p)
ahull.grid
direct.label(p,list(outside.ahull),TRUE)
direct.label(p,list(outside.ahull),TRUE)
traceback()
direct.label(p,list(outside.ahull),TRUE)
edges
centers
closepts
Q
direct.label(p,list(outside.ahull),TRUE)
big.boxes
direct.label(p,list(outside.ahull),TRUE)
closepts
centers
Q
direct.label(p,list(outside.ahull),TRUE)
n
Q
direct.label(p,list(outside.ahull),TRUE)
n
n
n
h
Q
direct.label(p,list(outside.ahull),TRUE)
direct.label(p,list(outside.ahull),TRUE)
direct.label(p,list(outside.ahull),TRUE)
direct.label(p,list(outside.ahull),TRUE)
direct.label(p,list(outside.ahull),TRUE)
outside.ahull
direct.label(p,list(outside.ahull),TRUE)
direct.label(p,list(outside.ahull),TRUE)
library(inlinedocs)
package.skeleton.dx()
dldoc()
dat
ref
str(dat)
51*5
converted
unique(dose)
unique(dat$group)
levels(dat$group)
dat$group
gsub("([0-9]{4})","\\\\n\\1",dat$group,perl=TRUE)
gsub("([0-9]{4})","\\n\\1",dat$group,perl=TRUE)
gsub("([0-9]{4})","\\\\n\\1",dat$group,perl=TRUE)
head(dat)
str(dat)
